{"version":3,"sources":["components/SamplePhotoFrameV1.js","components/PhotoPage.js"],"names":["SamplePhotoFrameV1","photo","screenSize","targetPos","onMouseOver","useState","isMouseOver","setIsMouseOver","size","computeSizeFromWidth","width","height","row","Math","floor","parseInt","id","col","targetGroup","newTargetPos","x","y","motionStyle","position","transition","transform","zIndex","opacity","style","className","src","url","alt","onMouseLeave","PhotoPage","photoList","getPhotoUrlsByIndex","pageStyle","getBasePageStyle","backgroundColor","map","i"],"mappings":"iLAuDeA,EAjDY,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YAExD,EAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAOC,YAHU,CAACC,MAAO,IAAKC,OAAQ,KAGMT,EAAWQ,OAEvDE,EAAMC,KAAKC,OAAOC,SAASd,EAAMe,IAAM,GAAK,IAC5CC,GAAOF,SAASd,EAAMe,IAAM,GAAK,GAEjCE,EAAcjB,EAAMe,GAAK,IAAM,EAAI,EAAI,EACvCG,EAAe,CACjBC,EAAGjB,EAAUe,GAAaE,EAAIH,EAAMT,EAAKE,MAHvB,KAIlBW,EAAGlB,EAAUe,GAAaG,EAAIT,EAAMJ,EAAKG,OAJvB,MAOhBW,EAAc,CAChBC,SAAU,WACVC,WAAYlB,EAAc,kBAAoB,gBAE9CmB,UAAWnB,EAAW,oBAAgBa,EAAaC,EAA7B,eAAqCD,EAAaE,EAAlD,sCAAmFF,EAAaC,EAAhG,eAAwGD,EAAaE,EAArH,OACtBK,OAAQpB,EAAc,EAAI,EAC1BqB,QAASrB,EAAc,EAAI,IAG/B,OACI,qBAAKsB,MAAON,EAAZ,SACI,qBACIO,UAAWvB,EAAc,6BAA+B,KACxDwB,IAAK7B,EAAM8B,IACXC,IAAI,GACJtB,MAAOF,EAAKE,MACZC,OAAQH,EAAKG,OACbP,YACI,WACIG,GAAe,GACfH,GAAeA,EAAYH,EAAMe,KAGzCiB,aACI,WACI1B,GAAe,GACfH,GAAeA,EAAY,U,QCZpC8B,UAzBG,SAAC,GAAuC,IAArChC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,UAAWuB,EAAa,EAAbA,OAElCS,EAAS,sBAAOC,YAAoB,GAAG,IAA9B,YAAwCA,YAAoB,GAAG,KAExEC,EAAS,2BACRC,YAAiBpC,EAAWQ,MAAOR,EAAWS,OAAQe,IAD9C,IAEXa,gBAAiB,UAGrB,OACI,qBACIX,MAAOS,EADX,SAGKF,EAAUK,KAAI,SAACvC,EAAOwC,GAAR,OACX,cAAC,EAAD,CAEIxC,MAAS,CAAC8B,IAAI9B,EAAOe,GAAGyB,EAAE,GAC1BvC,WAAYA,EACZC,UAAWA,GAHNsC","file":"static/js/5.6502fc1c.chunk.js","sourcesContent":["// Reference: For the animations - https://css-tricks.com/using-multi-step-animations-transitions/\n\nimport React, { useState } from 'react'\nimport { computeSizeFromWidth } from '../utils'\n\n\nconst SamplePhotoFrameV1 = ({ photo, screenSize, targetPos, onMouseOver }) => {\n    const fixedImageSize = {width: 100, height: 140};\n    const [isMouseOver, setIsMouseOver] = useState(false);\n\n    const size = computeSizeFromWidth(fixedImageSize, screenSize.width);\n\n    const row = Math.floor((parseInt(photo.id) - 1) / 11);\n    const col = (parseInt(photo.id) - 1) % 11;\n    const OVERLAP_RATIO = 1.05;\n    const targetGroup = photo.id % 2 === 0 ? 1 : 0\n    const newTargetPos = {\n        x: targetPos[targetGroup].x + col * size.width * OVERLAP_RATIO,\n        y: targetPos[targetGroup].y + row * size.height * OVERLAP_RATIO,\n    };\n    \n    const motionStyle = {\n        position: 'absolute',\n        transition: isMouseOver ? 'all 0.8s linear' : 'all 2s linear',\n        // transform: `translate(${newTargetPos.x}px, ${newTargetPos.y}px)`,\n        transform: isMouseOver ? `translate(${newTargetPos.x}px, ${newTargetPos.y}px) scale(1.5)` : `translate(${newTargetPos.x}px, ${newTargetPos.y}px)`,\n        zIndex: isMouseOver ? 4 : 3,\n        opacity: isMouseOver ? 1 : 0.5,\n    }\n\n    return (\n        <div style={motionStyle}>\n            <img\n                className={isMouseOver ? \"FilterAdditionalBrightness\" : null}\n                src={photo.url}\n                alt=\"\"\n                width={size.width}\n                height={size.height}\n                onMouseOver={\n                    () => {\n                        setIsMouseOver(true);\n                        onMouseOver && onMouseOver(photo.id);\n                    }\n                }\n                onMouseLeave={\n                    () => {\n                        setIsMouseOver(false);\n                        onMouseOver && onMouseOver(\"\");\n                    }\n                }\n            />\n        </div>\n    )\n}\n\nexport default SamplePhotoFrameV1\n","// Reference: For the animations - https://css-tricks.com/using-multi-step-animations-transitions/\n\nimport React from 'react'\nimport SamplePhotoFrameV1 from './SamplePhotoFrameV1';\nimport { getBasePageStyle } from '../utils'\n\n// Resources\nimport { getPhotoUrlsByIndex } from '../resources/photos';\n\n\nconst PhotoPage = ({ screenSize, targetPos, zIndex }) => {\n    // Photo\n    const photoList = [...getPhotoUrlsByIndex(0, true), ...getPhotoUrlsByIndex(1, true)];\n\n    const pageStyle = {\n        ...getBasePageStyle(screenSize.width, screenSize.height, zIndex),\n        backgroundColor: 'black',\n    };\n\n    return (\n        <div\n            style={pageStyle}\n        >\n            {photoList.map((photo, i) => (\n                <SamplePhotoFrameV1\n                    key={i}\n                    photo = {{url:photo, id:i+1}}\n                    screenSize={screenSize}\n                    targetPos={targetPos}\n                />\n            ))}\n        </div>\n    )\n}\n        \nexport default PhotoPage\n        "],"sourceRoot":""}