{"version":3,"sources":["components/SampleVideoFrameV1.js","components/FilmPage.js"],"names":["SampleVideoFrame","artist","screenSize","targetPos","onMouseOver","useState","width","height","naturalSize","setNaturalSize","isMouseOver","setIsMouseOver","size","computeSizeFromWidth","row","Math","floor","parseInt","id","col","newTargetPos","x","y","motionStyle","position","transition","transform","zIndex","opacity","style","to","className","src","process","sampleVideoSrc","preload","loop","muted","autoPlay","playsInline","onLoadedData","response","target","videoWidth","videoHeight","title","onMouseLeave","FilmPage","artistList","getInitSampleArtistsInfo","pageStyle","getBasePageStyle","backgroundColor","map","i","SampleVideoFrameV1","group"],"mappings":"iLAoEeA,EA7DU,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YACzD,EAAsCC,mBAAS,CAACC,MAAO,IAAKC,OAAQ,MAApE,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCJ,oBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAEMC,EAAOC,YAAqBL,EAAaN,EAAWI,OAEpDQ,EAAMC,KAAKC,OAAOC,SAAShB,EAAOiB,IAAM,GAAK,GAC7CC,GAAOF,SAAShB,EAAOiB,IAAM,GAAK,EAElCE,EAAe,CACnBC,EAAGlB,EAAUkB,EAAIF,EAAMP,EAAKN,MAFR,IAGpBgB,EAAGnB,EAAUmB,EAAIR,EAAMF,EAAKL,OAHR,KAMhBgB,EAAc,CAClBC,SAAU,WACVC,WAAYf,EAAc,gBAAkB,gBAE5CgB,UAAWhB,EAAW,oBAAgBU,EAAaC,EAA7B,eAAqCD,EAAaE,EAAlD,sCAAmFF,EAAaC,EAAhG,eAAwGD,EAAaE,EAArH,OACtBK,OAAQjB,EAAc,EAAI,EAC1BkB,QAASlB,EAAc,EAAI,IAI7B,OACE,qBAAKmB,MAAON,EAAZ,SACE,cAAC,OAAD,CAAMO,GAAE,WAAM7B,EAAOiB,IAArB,SACE,uBACEa,UAAWrB,EAAc,6BAA+B,KACxDsB,IAAG,UAAKC,mBAAL,YAA+BhC,EAAOiC,gBACzC5B,MAAOM,EAAKN,MACZC,OAAQK,EAAKL,OACb4B,QAAQ,OACRC,MAAI,EACJC,OAAK,EACLC,UAAQ,EACRC,aAAW,EACXC,aAAc,SAAAC,GACZ,MAAoCA,EAASC,OAArCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,YACpBnC,EAAe,CAACH,MAAOqC,EAAYpC,OAAQqC,KAE7CxC,YACE,WACEO,GAAe,GACfP,EAAYH,EAAO4C,QAGvBC,aACE,WACEnC,GAAe,GACfP,EAAY,KAvBlB,yE,QCEO2C,UA1BE,SAAC,GAAoD,IAAlD7C,EAAiD,EAAjDA,WAAYC,EAAqC,EAArCA,UAAWwB,EAA0B,EAA1BA,OAAQvB,EAAkB,EAAlBA,YAEzC4C,EAAaC,cAEbC,EAAS,2BACRC,YAAiBjD,EAAWI,MAAOJ,EAAWK,OAAQoB,IAD9C,IAEXyB,gBAAiB,UAGrB,OACI,qBACIvB,MAAOqB,EADX,SAGKF,EAAWK,KAAI,SAACpD,EAAQqD,GAAT,OACZ,cAACC,EAAD,CAEItD,OAAUA,EACVC,WAAYA,EACZC,UAA4B,WAAjBF,EAAOuD,MAAqBrD,EAAU,GAAKA,EAAU,GAChEC,YAAaA,GAJRH,EAAO4C","file":"static/js/3.3a147a4b.chunk.js","sourcesContent":["// Reference: For the animations - https://css-tricks.com/using-multi-step-animations-transitions/\n\nimport React, { useState }  from 'react'\nimport { Link } from 'react-router-dom'\nimport { computeSizeFromWidth } from '../utils'\n\n\nconst SampleVideoFrame = ({ artist, screenSize, targetPos, onMouseOver }) => {\n  const [naturalSize, setNaturalSize] = useState({width: 100, height: 100});\n  const [isMouseOver, setIsMouseOver] = useState(false);\n\n  const size = computeSizeFromWidth(naturalSize, screenSize.width);\n\n  const row = Math.floor((parseInt(artist.id) - 1) / 3);\n  const col = (parseInt(artist.id) - 1) % 3;\n  const OVERLAP_RATIO = 1.3;\n  const newTargetPos = {\n    x: targetPos.x + col * size.width * OVERLAP_RATIO,\n    y: targetPos.y + row * size.height * OVERLAP_RATIO,\n  };\n\n  const motionStyle = {\n    position: 'absolute',\n    transition: isMouseOver ? 'all 1s linear' : 'all 2s linear',\n    // transform: `translate(${newTargetPos.x}px, ${newTargetPos.y}px)`,\n    transform: isMouseOver ? `translate(${newTargetPos.x}px, ${newTargetPos.y}px) scale(1.5)` : `translate(${newTargetPos.x}px, ${newTargetPos.y}px)`,\n    zIndex: isMouseOver ? 4 : 3,\n    opacity: isMouseOver ? 1 : 0.5,\n    \n  }\n\n  return (\n    <div style={motionStyle}>\n      <Link to={`/${artist.id}`}>\n        <video\n          className={isMouseOver ? \"FilterAdditionalBrightness\" : null}\n          src={`${process.env.PUBLIC_URL}/${artist.sampleVideoSrc}`}\n          width={size.width}\n          height={size.height}\n          preload=\"auto\"\n          loop\n          muted\n          autoPlay\n          playsInline\n          onLoadedData={response => {\n            const { videoWidth, videoHeight } = response.target;      \n            setNaturalSize({width: videoWidth, height: videoHeight});\n          }}\n          onMouseOver={\n            () => {\n              setIsMouseOver(true);\n              onMouseOver(artist.title);\n            }\n          }\n          onMouseLeave={\n            () => {\n              setIsMouseOver(false);\n              onMouseOver(\"\");\n            }\n          }\n        >\n          Your browser does not support the HTML5 Video element.\n        </video>\n      </Link>\n    </div>\n  )\n}\n\nexport default SampleVideoFrame\n","// Reference: For the animations - https://css-tricks.com/using-multi-step-animations-transitions/\n\nimport React from 'react'\nimport SampleVideoFrameV1 from './SampleVideoFrameV1';\nimport { getBasePageStyle } from '../utils'\n\n// Resource\nimport { getInitSampleArtistsInfo } from '../resources/films';\n\n\nconst FilmPage = ({ screenSize, targetPos, zIndex, onMouseOver }) => {\n\n    const artistList = getInitSampleArtistsInfo();\n\n    const pageStyle = {\n        ...getBasePageStyle(screenSize.width, screenSize.height, zIndex),\n        backgroundColor: 'black',\n    };\n    \n    return (\n        <div\n            style={pageStyle}\n        >\n            {artistList.map((artist, i) => (\n                <SampleVideoFrameV1\n                    key={artist.title}\n                    artist = {artist}\n                    screenSize={screenSize}\n                    targetPos={artist.group === 'group1' ? targetPos[0] : targetPos[1]}\n                    onMouseOver={onMouseOver}\n                />\n            ))}\n        </div>\n    )\n}\n        \nexport default FilmPage\n        "],"sourceRoot":""}