{"version":3,"file":"static/js/938.24ad2e3b.chunk.js","mappings":"0LAMA,MA8DA,EA9DyBA,IAAqD,IAApD,OAAEC,EAAM,WAAEC,EAAU,UAAEC,EAAS,YAAEC,GAAaJ,EACtE,MAAOK,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,CAAEC,MAAO,IAAKC,OAAQ,OAC9DC,EAAaC,IAAkBJ,EAAAA,EAAAA,WAAS,GAEzCK,GAAOC,EAAAA,EAAAA,IAAqBR,EAAaH,EAAWM,OAEpDM,EAAMC,KAAKC,OAAOC,SAAShB,EAAOiB,UAAY,GAAK,GACnDC,GAAOF,SAAShB,EAAOiB,UAAY,GAAK,EAExCE,EAAe,CACnBC,EAAGlB,EAAUkB,EAAIF,EAAMP,EAAKJ,MAFR,IAGpBc,EAAGnB,EAAUmB,EAAIR,EAAMF,EAAKH,OAHR,KAMhBc,EAAc,CAClBC,SAAU,WACVC,WAAYf,EAAc,gBAAkB,gBAE5CgB,UAAWhB,EAAW,aAAAiB,OACLP,EAAaC,EAAC,QAAAM,OAAOP,EAAaE,EAAC,+BAAAK,OACnCP,EAAaC,EAAC,QAAAM,OAAOP,EAAaE,EAAC,OACpDM,OAAQlB,EAAc,EAAI,EAC1BmB,QAASnB,EAAc,EAAI,IAGvBoB,GACJC,EAAAA,EAAAA,KAAA,SACEC,UAAWtB,EAAc,6BAA+B,KACxDuB,IAAG,GAAAN,OAAKO,GAAsB,KAAAP,OAAI1B,EAAOkC,gBACzC3B,MAAOI,EAAKJ,MACZC,OAAQG,EAAKH,OACb2B,QAAQ,OACRC,MAAI,EACJC,OAAK,EACLC,UAAQ,EACRC,aAAW,EACXC,aAAeC,IACb,MAAM,WAAEC,EAAU,YAAEC,GAAgBF,EAASG,OAC7CvC,EAAe,CAAEE,MAAOmC,EAAYlC,OAAQmC,GAAc,EAE5DxC,YAAaA,KACXO,GAAe,GACfP,EAAYH,EAAO6C,MAAM,EAE3BC,aAAcA,KACZpC,GAAe,GACfP,EAAY,GAAG,EACf4C,SACH,2DAKGC,EAAehD,EAAOiD,eAC1BnB,EAAAA,EAAAA,KAACoB,EAAAA,KAAI,CAACC,GAAInD,EAAOiD,cAAa,IAAAvB,OAAO1B,EAAOoD,IAAE,IAASL,SAAElB,IAEzDA,EAGF,OAAOC,EAAAA,EAAAA,KAAA,OAAKuB,MAAO/B,EAAYyB,SAAEC,GAAmB,E,cCvDtD,MAuBA,EAvBiBjD,IAAqD,IAApD,WAAEE,EAAU,UAAEC,EAAS,OAAEyB,EAAM,YAAExB,GAAaJ,EAC9D,MAAMuD,GAAaC,EAAAA,EAAAA,MAEbC,EAAY,KACbC,EAAAA,EAAAA,IAAiBxD,EAAWM,MAAON,EAAWO,OAAQmB,GACzD+B,gBAAiB,SAGnB,OACE5B,EAAAA,EAAAA,KAAA,OAAKuB,MAAOG,EAAUT,SACnBO,EAAWK,KAAI,CAAC3D,EAAQ4D,KACvB9B,EAAAA,EAAAA,KAAC+B,EAAkB,CAEjB7D,OAAQA,EACRC,WAAYA,EACZC,UAAWF,EAAOoD,GAAK,IAAM,EAAIlD,EAAU,GAAKA,EAAU,GAC1DC,YAAaA,GAJRH,EAAO6C,UAOZ,C","sources":["components/SampleVideoFrameV1.js","components/FilmPage.js"],"sourcesContent":["// Reference: For the animations - https://css-tricks.com/using-multi-step-animations-transitions/\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { computeSizeFromWidth } from \"../utils\";\n\nconst SampleVideoFrame = ({ artist, screenSize, targetPos, onMouseOver }) => {\n  const [naturalSize, setNaturalSize] = useState({ width: 100, height: 100 });\n  const [isMouseOver, setIsMouseOver] = useState(false);\n\n  const size = computeSizeFromWidth(naturalSize, screenSize.width);\n\n  const row = Math.floor((parseInt(artist.sampleId) - 1) / 3);\n  const col = (parseInt(artist.sampleId) - 1) % 3;\n  const OVERLAP_RATIO = 1.3;\n  const newTargetPos = {\n    x: targetPos.x + col * size.width * OVERLAP_RATIO,\n    y: targetPos.y + row * size.height * OVERLAP_RATIO,\n  };\n\n  const motionStyle = {\n    position: \"absolute\",\n    transition: isMouseOver ? \"all 1s linear\" : \"all 2s linear\",\n    // transform: `translate(${newTargetPos.x}px, ${newTargetPos.y}px)`,\n    transform: isMouseOver\n      ? `translate(${newTargetPos.x}px, ${newTargetPos.y}px) scale(1.5)`\n      : `translate(${newTargetPos.x}px, ${newTargetPos.y}px)`,\n    zIndex: isMouseOver ? 4 : 3,\n    opacity: isMouseOver ? 1 : 0.5,\n  };\n\n  const elemVideo = (\n    <video\n      className={isMouseOver ? \"FilterAdditionalBrightness\" : null}\n      src={`${process.env.PUBLIC_URL}/${artist.sampleVideoSrc}`}\n      width={size.width}\n      height={size.height}\n      preload=\"auto\"\n      loop\n      muted\n      autoPlay\n      playsInline\n      onLoadedData={(response) => {\n        const { videoWidth, videoHeight } = response.target;\n        setNaturalSize({ width: videoWidth, height: videoHeight });\n      }}\n      onMouseOver={() => {\n        setIsMouseOver(true);\n        onMouseOver(artist.title);\n      }}\n      onMouseLeave={() => {\n        setIsMouseOver(false);\n        onMouseOver(\"\");\n      }}\n    >\n      Your browser does not support the HTML5 Video element.\n    </video>\n  );\n\n  const elemWithLink = artist.hasDetailPage ? (\n    <Link to={artist.hasDetailPage ? `/${artist.id}` : `/`}>{elemVideo}</Link>\n  ) : (\n    elemVideo\n  );\n\n  return <div style={motionStyle}>{elemWithLink}</div>;\n};\n\nexport default SampleVideoFrame;\n","// Reference: For the animations - https://css-tricks.com/using-multi-step-animations-transitions/\n\nimport React from 'react';\n\nimport SampleVideoFrameV1 from './SampleVideoFrameV1';\nimport { getBasePageStyle } from '../utils';\n\n// Resource\nimport { getInitSampleArtistsInfo } from '../resources/films';\n\nconst FilmPage = ({ screenSize, targetPos, zIndex, onMouseOver }) => {\n  const artistList = getInitSampleArtistsInfo();\n\n  const pageStyle = {\n    ...getBasePageStyle(screenSize.width, screenSize.height, zIndex),\n    backgroundColor: 'black',\n  };\n\n  return (\n    <div style={pageStyle}>\n      {artistList.map((artist, i) => (\n        <SampleVideoFrameV1\n          key={artist.title}\n          artist={artist}\n          screenSize={screenSize}\n          targetPos={artist.id % 2 === 1 ? targetPos[0] : targetPos[1]}\n          onMouseOver={onMouseOver}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default FilmPage;\n"],"names":["_ref","artist","screenSize","targetPos","onMouseOver","naturalSize","setNaturalSize","useState","width","height","isMouseOver","setIsMouseOver","size","computeSizeFromWidth","row","Math","floor","parseInt","sampleId","col","newTargetPos","x","y","motionStyle","position","transition","transform","concat","zIndex","opacity","elemVideo","_jsx","className","src","process","sampleVideoSrc","preload","loop","muted","autoPlay","playsInline","onLoadedData","response","videoWidth","videoHeight","target","title","onMouseLeave","children","elemWithLink","hasDetailPage","Link","to","id","style","artistList","getInitSampleArtistsInfo","pageStyle","getBasePageStyle","backgroundColor","map","i","SampleVideoFrameV1"],"sourceRoot":""}