{"version":3,"file":"static/js/938.907c7d04.chunk.js","mappings":"kOAoEA,EA9DyB,SAAC,GAAoD,IAAlDA,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YACzD,GAAsCC,EAAAA,EAAAA,UAAS,CAAEC,MAAO,IAAKC,OAAQ,MAArE,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAsCJ,EAAAA,EAAAA,WAAS,GAA/C,eAAOK,EAAP,KAAoBC,EAApB,KAEMC,GAAOC,EAAAA,EAAAA,IAAqBL,EAAaN,EAAWI,OAEpDQ,EAAMC,KAAKC,OAAOC,SAAShB,EAAOiB,UAAY,GAAK,GACnDC,GAAOF,SAAShB,EAAOiB,UAAY,GAAK,EAExCE,EAAe,CACnBC,EAAGlB,EAAUkB,EAAIF,EAAMP,EAAKN,MAFR,IAGpBgB,EAAGnB,EAAUmB,EAAIR,EAAMF,EAAKL,OAHR,KAMhBgB,EAAc,CAClBC,SAAU,WACVC,WAAYf,EAAc,gBAAkB,gBAE5CgB,UAAWhB,EAAW,oBACLU,EAAaC,EADR,eACgBD,EAAaE,EAD7B,sCAELF,EAAaC,EAFR,eAEgBD,EAAaE,EAF7B,OAGtBK,OAAQjB,EAAc,EAAI,EAC1BkB,QAASlB,EAAc,EAAI,IAGvBmB,GACJ,kBACEC,UAAWpB,EAAc,6BAA+B,KACxDqB,IAAG,UAAKC,GAAL,YAA+B/B,EAAOgC,gBACzC3B,MAAOM,EAAKN,MACZC,OAAQK,EAAKL,OACb2B,QAAQ,OACRC,MAAI,EACJC,OAAK,EACLC,UAAQ,EACRC,aAAW,EACXC,aAAc,SAACC,GACb,MAAoCA,EAASC,OAArCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,YACpBlC,EAAe,CAAEH,MAAOoC,EAAYnC,OAAQoC,KAE9CvC,YAAa,WACXO,GAAe,GACfP,EAAYH,EAAO2C,QAErBC,aAAc,WACZlC,GAAe,GACfP,EAAY,KApBhB,oEA2BI0C,EAAe7C,EAAO8C,eAC1B,SAAC,EAAAC,KAAD,CAAMC,GAAIhD,EAAO8C,cAAP,WAA2B9C,EAAOiD,IAAlC,IAAV,SAAyDrB,IAEzDA,EAGF,OAAO,gBAAKsB,MAAO5B,EAAZ,SAA0BuB,K,UChCnC,EAvBiB,SAAC,GAAoD,IAAlD5C,EAAiD,EAAjDA,WAAYC,EAAqC,EAArCA,UAAWwB,EAA0B,EAA1BA,OAAQvB,EAAkB,EAAlBA,YAC3CgD,GAAaC,EAAAA,EAAAA,MAEbC,GAAS,mBACVC,EAAAA,EAAAA,IAAiBrD,EAAWI,MAAOJ,EAAWK,OAAQoB,IAD5C,IAEb6B,gBAAiB,UAGnB,OACE,gBAAKL,MAAOG,EAAZ,SACGF,EAAWK,KAAI,SAACxD,EAAQyD,GAAT,OACd,SAACC,EAAD,CAEE1D,OAAQA,EACRC,WAAYA,EACZC,UAAWF,EAAOiD,GAAK,IAAM,EAAI/C,EAAU,GAAKA,EAAU,GAC1DC,YAAaA,GAJRH,EAAO2C","sources":["components/SampleVideoFrameV1.js","components/FilmPage.js"],"sourcesContent":["// Reference: For the animations - https://css-tricks.com/using-multi-step-animations-transitions/\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { computeSizeFromWidth } from \"../utils\";\n\nconst SampleVideoFrame = ({ artist, screenSize, targetPos, onMouseOver }) => {\n  const [naturalSize, setNaturalSize] = useState({ width: 100, height: 100 });\n  const [isMouseOver, setIsMouseOver] = useState(false);\n\n  const size = computeSizeFromWidth(naturalSize, screenSize.width);\n\n  const row = Math.floor((parseInt(artist.sampleId) - 1) / 3);\n  const col = (parseInt(artist.sampleId) - 1) % 3;\n  const OVERLAP_RATIO = 1.3;\n  const newTargetPos = {\n    x: targetPos.x + col * size.width * OVERLAP_RATIO,\n    y: targetPos.y + row * size.height * OVERLAP_RATIO,\n  };\n\n  const motionStyle = {\n    position: \"absolute\",\n    transition: isMouseOver ? \"all 1s linear\" : \"all 2s linear\",\n    // transform: `translate(${newTargetPos.x}px, ${newTargetPos.y}px)`,\n    transform: isMouseOver\n      ? `translate(${newTargetPos.x}px, ${newTargetPos.y}px) scale(1.5)`\n      : `translate(${newTargetPos.x}px, ${newTargetPos.y}px)`,\n    zIndex: isMouseOver ? 4 : 3,\n    opacity: isMouseOver ? 1 : 0.5,\n  };\n\n  const elemVideo = (\n    <video\n      className={isMouseOver ? \"FilterAdditionalBrightness\" : null}\n      src={`${process.env.PUBLIC_URL}/${artist.sampleVideoSrc}`}\n      width={size.width}\n      height={size.height}\n      preload=\"auto\"\n      loop\n      muted\n      autoPlay\n      playsInline\n      onLoadedData={(response) => {\n        const { videoWidth, videoHeight } = response.target;\n        setNaturalSize({ width: videoWidth, height: videoHeight });\n      }}\n      onMouseOver={() => {\n        setIsMouseOver(true);\n        onMouseOver(artist.title);\n      }}\n      onMouseLeave={() => {\n        setIsMouseOver(false);\n        onMouseOver(\"\");\n      }}\n    >\n      Your browser does not support the HTML5 Video element.\n    </video>\n  );\n\n  const elemWithLink = artist.hasDetailPage ? (\n    <Link to={artist.hasDetailPage ? `/${artist.id}` : `/`}>{elemVideo}</Link>\n  ) : (\n    elemVideo\n  );\n\n  return <div style={motionStyle}>{elemWithLink}</div>;\n};\n\nexport default SampleVideoFrame;\n","// Reference: For the animations - https://css-tricks.com/using-multi-step-animations-transitions/\n\nimport React from 'react';\n\nimport SampleVideoFrameV1 from './SampleVideoFrameV1';\nimport { getBasePageStyle } from '../utils';\n\n// Resource\nimport { getInitSampleArtistsInfo } from '../resources/films';\n\nconst FilmPage = ({ screenSize, targetPos, zIndex, onMouseOver }) => {\n  const artistList = getInitSampleArtistsInfo();\n\n  const pageStyle = {\n    ...getBasePageStyle(screenSize.width, screenSize.height, zIndex),\n    backgroundColor: 'black',\n  };\n\n  return (\n    <div style={pageStyle}>\n      {artistList.map((artist, i) => (\n        <SampleVideoFrameV1\n          key={artist.title}\n          artist={artist}\n          screenSize={screenSize}\n          targetPos={artist.id % 2 === 1 ? targetPos[0] : targetPos[1]}\n          onMouseOver={onMouseOver}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default FilmPage;\n"],"names":["artist","screenSize","targetPos","onMouseOver","useState","width","height","naturalSize","setNaturalSize","isMouseOver","setIsMouseOver","size","computeSizeFromWidth","row","Math","floor","parseInt","sampleId","col","newTargetPos","x","y","motionStyle","position","transition","transform","zIndex","opacity","elemVideo","className","src","process","sampleVideoSrc","preload","loop","muted","autoPlay","playsInline","onLoadedData","response","target","videoWidth","videoHeight","title","onMouseLeave","elemWithLink","hasDetailPage","Link","to","id","style","artistList","getInitSampleArtistsInfo","pageStyle","getBasePageStyle","backgroundColor","map","i","SampleVideoFrameV1"],"sourceRoot":""}